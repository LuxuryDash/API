openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/effective-temp/luxary-dash-v2/1.0.0
info:
  description: Luxary Dash Development API
  version: "1.0.0"
  title: Luxary Dash API
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'

tags:
  - name: auth
    description: Sign-In and Sign-Up methods
  - name: users
    description: Users Control methods
  - name: System
    description: System operations
  - name: workspaces
    description: Workspaces operations
  - name: current user
  - name: Current workspace user info
  - name: attributes
  - name: filters
  - name: assets
  - name: config
  - name: members
paths:

  /check-email:
    post:
      tags:
        - auth
      summary: Check email status
      operationId: checkEmail
      description: |
       Returns email status 
      requestBody:
        content:
          application/json:
           schema:
            $ref: '#/components/schemas/EmailStatusRequest'
        description: Email data to check      
      responses:
        '200':
          description: operation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailStatusResponse'
        '400':
          description: bad input parameter
  /config/system-attributes:
    get:
      security:
        - BearerAuth: []
      tags:
        - config
      summary: Returns system attributes
      operationId: getSystemAttributes
      responses:
        '200':
          description: operation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemAttributeResponse'
        
  /workspace/{id}/assets:
    post:
      security:
        - BearerAuth: []
      tags:
        - workspaces
        - assets
      summary: Returns page of assets that match criterias
      operationId: listWorkspaceAssets
      parameters:
        - name: id
          in: path
          description: Workspace ID
          required: true
          schema:
            type: string
            format: uuid
      description: |
        Returns a list of assets for current workpsace by criteria
      requestBody:
        content:
          application/json:
           schema:
            $ref: '#/components/schemas/PaginatedRequest'
      responses:
        '200':
          description: operation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsResponse'
  
  /workspace/{id}/attribute/{attrId}/system-attributes:
    get:
      security:
        - BearerAuth: []
      tags: 
        - workspaces
        - attributes
      summary: Returns a list of system attributes associated with attribute
      operationId: listSystemAttributesByAttribute
      parameters:
        - name: id
          in: path
          description: Workspace ID
          required: true
          schema:
            type: string
            format: uuid
        - name: attrId
          in: path
          description: Attribute ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: operation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemAttributeResponse'
                
  /workspace/{id}/attribute/{attrId}/system-attribute/{sAttrId}:
    post:
      security:
        - BearerAuth: []
      tags: 
        - workspaces
        - attributes
      summary: Link system attributes associated with attribute
      operationId: linkSystemAttributesToAttribute
      parameters:
        - name: id
          in: path
          description: Workspace ID
          required: true
          schema:
            type: string
            format: uuid
        - name: attrId
          in: path
          description: Attribute ID
          required: true
          schema:
            type: string
            format: uuid
        - name: sAttrId
          in: path
          description: Systen Attribute ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: operation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
    delete:
      security:
        - BearerAuth: []
      tags: 
        - workspaces
        - attributes
      summary: Remove link of system attributes associated with attribute
      operationId: unlinkSystemAttributesToAttribute
      parameters:
        - name: id
          in: path
          description: Workspace ID
          required: true
          schema:
            type: string
            format: uuid
        - name: attrId
          in: path
          description: Attribute ID
          required: true
          schema:
            type: string
            format: uuid
        - name: sAttrId
          in: path
          description: Systen Attribute ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: operation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
                
  /workspace/{id}/attributes:
    get:
      security:
        - BearerAuth: []
      tags: 
        - workspaces
        - attributes
      summary: Returns a list of attributes for current workpsace
      operationId: listWorkspaceAttributes
      parameters:
        - name: id
          in: path
          description: Workspace ID
          required: true
          schema:
            type: string
            format: uuid
      description: |
        Returns a list of attributes for current workpsace
      responses:
        '200':
          description: operation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceAttributesResponse'
                
    post:
      security:
        - BearerAuth: []
      tags: 
        - workspaces
        - attributes
      summary: Returns a list of attributes for current workpsace by criteria
      operationId: listWorkspaceAttributesByCriteris
      parameters:
        - name: id
          in: path
          description: Workspace ID
          required: true
          schema:
            type: string
            format: uuid
      description: |
        Returns a list of attributes for current workpsace by criteria
      requestBody:
        content:
          application/json:
           schema:
            $ref: '#/components/schemas/PaginatedRequest'
      responses:
        '200':
          description: operation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceAttributesResponse'
  
  /workspace/{id}/members:
    put:
      security:
        - BearerAuth: []
      tags: 
        - workspaces
        - members
      summary: Invite new member to workspace
      operationId: addWorkspaceMember
      description: |
          Invite new member to workspace by e-mail
      parameters:
          - name: id
            in: path
            description: Workspace ID
            required: true
            schema:
              type: string
              format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberShort'  
      responses:
          '200':
            description: operation result
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/MemberResponse'
  
    post:
      security:
        - BearerAuth: []
      tags: 
        - workspaces
        - members
      summary: Get list of workspace members by critera
      operationId: listWorkspaceMembers
      description: |
          Returns list of workspace member by criteris
      parameters:
        - name: id
          in: path
          description: Workspace ID
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaginatedRequest'  
      responses:
          '200':
            description: operation result
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/MemberPageResponse'
  
  /workspace/{id}/member/{memberId}:
    delete:
      security:
        - BearerAuth: []
      tags: 
        - workspaces
        - members
      summary: Remove memeber
      operationId: removeWorkspaceMember
      description: |
        Removes memebr by id from workspace
      parameters:
        - name: id
          in: path
          description: Workspace ID
          required: true
          schema:
            type: string
            format: uuid
        - name: memberId
          in: path
          description: Member ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
          '200':
            description: operation result
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/CommonResponse'
  
  /workspace/{id}/member-groups:
    post:
      security:
        - BearerAuth: []
      tags: 
        - workspaces
        - members
      summary: Get list of workspace members groups by critera
      operationId: listWorkspaceMemberGroups
      description: |
          Returns list of workspace member groups by criterias
      parameters:
        - name: id
          in: path
          description: Workspace ID
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaginatedRequest'  
      responses:
          '200':
            description: operation result
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/MemberGroupPageResponse'
   
  /workspace/{id}/member-group/{groupId}:
    delete:
      security:
        - BearerAuth: []
      tags: 
        - workspaces
        - members
      summary: Remove memeber group
      operationId: removeWorkspaceMemberGroup
      description: |
        Removes memebr group by id from workspace
      parameters:
        - name: id
          in: path
          description: Workspace ID
          required: true
          schema:
            type: string
            format: uuid
        - name: groupId
          in: path
          description: Member Group ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
          '200':
            description: operation result
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/CommonResponse'
      
  /workspace/{id}/attributes/options:
    put:
      security:
        - BearerAuth: []
      tags: 
        - workspaces
        - attributes
      summary: Add new option to attribute
      operationId: addWorkspaceAttributeOption
      description: |
        Add new option to workspace attribute
      parameters:
        - name: id
          in: path
          description: Workspace ID
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeOption'
      responses:
        '200':
          description: operation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddAttributeOptionResponse'
    post:
      security:
        - BearerAuth: []
      tags: 
        - workspaces
        - attributes
      summary: Returns a list of options for attribute
      operationId: listWorkspaceAttributesOptions
      description: |
        Returns a list of attributes for current workpsace
      parameters:
        - name: id
          in: path
          description: Workspace ID
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaginatedRequest'
      responses:
        '200':
          description: operation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeOptionsResponse'

  /workspace/{id}/attributes/options/{optionId}:
    delete:
      security:
        - BearerAuth: []
      tags: 
        - workspaces
        - attributes
      summary: Delete attribute by id
      operationId: deleteWorkspaceAttributesOptionById
      description: |
        Add new option to workspace attribute
      parameters:
        - name: id
          in: path
          description: Workspace ID
          required: true
          schema:
            type: string
            format: uuid
        - name: optionId
          in: path
          description: Option ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: operation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
  
  /workspace/{id}/filters:
    get:
      security:
        - BearerAuth: []
      tags: 
        - workspaces
        - filters
      summary: Returns a list of filters for current workpsace
      operationId: listWorkspaceFilters
      description: |
        Returns a list of filters for current workpsace
      parameters:
        - name: id
          in: path
          description: Workspace ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: operation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceFiltersResponse'
  
  /workspace/{id}/current-user:
    get:
      security:
        - BearerAuth: []
      tags: 
        - workspaces
        - current user
      summary: Returns current user information from workpsace
      operationId: workspaceCurrentUser
      description: |
        Gets current user information from workspace
      parameters:
        - name: id
          in: path
          description: Workspace ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: operation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceUserInfoResponse'
  
  /workspace/{id}/terms-and-conditions:
    post:
      tags:
        - auth
        - workspaces
      summary: Accepts tems and conditions
      operationId: acceptTermsAndConditions
      description: |
       Accepts tems and conditions
      parameters:
        - name: id
          in: path
          description: Workspace ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: operation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse' 
  
  /workspace/{id}/task/{taskId}/status:
    get:
      tags:
        - workspaces
      summary: Return workspace initialization task status
      operationId: workspaceInitializationTaskStatus
      description: |
       Accepts tems and conditions
      parameters:
        - name: id
          in: path
          description: Workspace ID
          required: true
          schema:
            type: string
            format: uuid
        - name: taskId
          in: path
          description: Workspace Task ID
          required: true
          schema:
            type: string
            enum:
              - init
      responses:
        '200':
          description: operation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceTaskStatusResponse' 
                
  /workspaces:
    put:
      tags:
        - auth
        - workspaces
      summary: Create unconfirmed workspace
      operationId: createWorkspace
      description: |
        Creates unconfirmed workspace using passing properties.
      requestBody:
        content:
          application/json:
           schema:
            $ref: '#/components/schemas/CreateWorkspaceRequest'
        description: Workspace propesries
      responses:
        '200':
          description: operation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWorkspaceResponse'
        '400':
          description: bad input parameter

  /workspaces/check-status:
    post:
      tags:
        - auth
        - workspaces
      summary: Check workspace status
      operationId: checkWorkspace
      description: |
       Returns workspace status 
      requestBody:
        content:
          application/json:
           schema:
            $ref: '#/components/schemas/WorkspaceStatusRequest'
        description: Workspace data to check      
      responses:
        '200':
          description: operation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceStatusResponse'
        '400':
          description: bad input parameter
  
  /workspaces/confirm:
    post:
      tags:
        - auth
        - workspaces
      summary: Confirm workspace 
      operationId: confirmWorkspace
      description: |
       Confirm workspace by passing activation code
      requestBody:
        content:
          application/json:
           schema:
            $ref: '#/components/schemas/ConfirmWorkspaceRequest'
        description: Confirm accound data
      responses:
        '200':
          description: operation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponse'
        '400':
          description: bad input parameter
  
  /workspaces/find:
    post:
      security: 
        - BearerAuth: []
      tags: 
        - workspaces
      summary: Searches for workspaces using criteria
      operationId: findtWorkspace
      description:  |
        Searches for workspaces using criteris. Rerturns page of workspaces thath match criteria 
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaginatedRequest'
      responses:
        '200':
          description: operation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceInfoResponse'
        '400':
          description: bad input parameter
    
  
  /system/health-check:
    get:
      tags:
        - system
      summary: Check system health
      operationId: healthCheck
      description: |
       Health check status
      responses:
        '200':
          description: operation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'

  /users:
    put:
      tags:
        - auth
        - users
      summary: Creates new user
      operationId: createUser
      description: |
        Creates new user account
      requestBody:
        content:
          application/json:
           schema:
            $ref: '#/components/schemas/CreateUserRequest'
        description: Confirm accound data
      responses:
        '200':
          description: operation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserResponse'
        '400':
          description: bad input parameter
  

          
components:

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer

  schemas:
  
    TaskStatus:
      type: object
      required: 
        - name
        - status
      properties:
        id:
          type: string
        name: 
          type: string
        status:
          type: string
          enum:
            - PENDING
            - IN_PROGRESS
            - SUCCESS
            - FAILED
        totalItems:
          type: integer
          format: int32
          default: 0
        completeItems:
          type: integer
          format: int32
          default: 0
        subTasksStatuses:
          type: array
          items:
            $ref: '#/components/schemas/TaskStatus'
        
    WorkspaceTaskStatusResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/TaskStatus'
    
    AddAttributeOptionResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/AttributeOptionWithPermission'
          
    
    Asset:
      type: object
      required: 
        - id
      properties:
        id:
          type: string
          format: uuid
        workspaceId:
          type: string
          format: uuid
        previewUrl:
          type: string
          format: url
        originalFileName:
          type: string
        fileType:
          type: string
          enum: 
            - IMAGE
            - VIDEO
        uploadDate:
          type: integer
          format: int64
        createdBy:
          type: string
        fileInfo:
          type: object
          properties:
            size:
              type: integer
              format: int64
            dimensions:
              type: object
              properties:
                width: 
                  type: integer
                  format: int32
                height:
                  type: integer
                  format: int32
            durationSec:
              type: integer
              format: int32
            mediaType:
              type: string
            geoLocation:
              type: object
              properties: 
                lat:
                  type: number
                lon:
                  type: number
        attributeSetVersion: 
          type: number
        attributes:
          type: array
          items:
            type: object
            properties:
              attributeId:
                type: string
                format: uuid
              attributeValues:
                type: array
                items: 
                  type: string
        downloadCount: 
          type: integer
    
    AssetWithPermission:
      allOf:
        - $ref: '#/components/schemas/ItemWithPermissions'
        - type: object
          properties:
            targetItem:
              $ref: '#/components/schemas/Asset'          
    
    AssetsResponse:
      allOf:
        - $ref: '#/components/schemas/PaginatedResponse'
        - type: object
          required:
            - total
            - data
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/AssetWithPermission'
      
    Attribute:
      type: object
      required:
        - id
        - name
        - multipleValues
        - fixedOptions
        - hierarchical
        - editControl
      properties:
        id:
          type: string
          format: uuid
        workspaceId:
          type: string
          format: uuid
        name: 
          type: string
        multipleValues:
          type: boolean
        fixedOptions:
          type: boolean
        hierarchical:
          type: boolean
        editControl:
          type: string
        dataType:
          type: string
    
    AttributeOption:
      type: object
      required: 
        - attributeId
      properties:
        attributeId: 
          type: string
          format: uuid
        id:
          type: string
          format: uuid
        leaf:
          type: boolean
        childrenCount:
          type: integer
          format: int32
        parentId:
          type: string
          format: uuid
        position:
          type: integer
          format: int32
        value:
          type: string
    
    AttributeOptionWithPermission:
      allOf:
        - $ref: '#/components/schemas/ItemWithPermissions'
        - type: object
          properties:
            targetItem:
              $ref: '#/components/schemas/AttributeOption'
    
    AttributeOptionsResponse:
      allOf:
        - $ref: '#/components/schemas/PaginatedResponse'
        - type: object
          required:
            - total
            - data
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/AttributeOptionWithPermission'
      
  
    Criteria:
      type: object
      required:
        - field
        - operation
        - value
      properties:
        field:
          type: string
        operation:
          type: string
          enum:
            - EQUALS
            - NOT_EQUAL
            - GREATER
            - GREATER_OR_EQUALS
            - LESS
            - LESS_OR_EQUALS
            - IN
            - NOT_IN
            - LIKE
            - NOT_LIKE
            - IS_EMPTY
            - NOT_EMPTY
            - BETWEEN
        value:
          type: array
          items:
            type: string
    
    CriteriaGroup:
      type: object
      properties:
        operator:
          type: string
          enum:
            - AND
            - OR
          default: AND
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/Criteria'
            
    ConfirmWorkspaceRequest: 
      type: object
      required:
        - email
        - workspace
        - activationCode
      properties:
        email:
          type: string
          format: email
        workspace:
          type: string
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]{0,61}[a-zA-Z0-9]$
        activationCode:
          type: string
    
        
    CommonResponse:
      type: object
      required:
        - responseStatus
      properties:
        responseStatus:
          $ref: '#/components/schemas/ResponseStatus'

    CreateWorkspaceRequest:
      type: object
      required:
        - email
        - workspace
      properties:
        email:
          type: string
          format: email
        workspace:
          type: string
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]{0,61}[a-zA-Z0-9]$
    
    CreateWorkspaceResponseData:
      type: object
      required:
        - workspaceId
        - dateTimeCreated
        - email
        - workspace
      properties:
        workspaceId:
          type: string
          format: uuid
        dateTimeCreated:
          type: integer
          format: int64
        workspace:
          type: string
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]{0,61}[a-zA-Z0-9]$
    
    CreateWorkspaceResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/CreateWorkspaceResponseData'
    
    CreateUserRequest: 
      type: object
      required: 
        - email
        - password
      properties:
        email: 
          type: string
          format: email
        password:
          type: string
          minLength: 6
        firstName:
          type: string
        lastName:
          type: string
    
    CreateUserData: 
      type: object
      required: 
        - id
      properties:
        id:
          type: string
          format: uuid
    
    CreateUserResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/CreateUserData'
    
    
    EmailStatus:
      type: object
      required: 
        - email
      properties:
        email:
          type: string
          format: email
        emailFree:
          type: boolean
           
    EmailStatusRequest:
      type: object
      required: 
        - email
      properties:
        email:
          type: string
          format: email
           
    EmailStatusResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/EmailStatus'
    
    ErrorMessage:
      type: object
      required: 
        - messageCode
      properties:
        code:
          type: string
          example: common.item.not.found
        data:
          type: object
          example:  { id: "d290f1ee-6c54-4b01-90e6-d701748f0851" }
        text:
          type: string
          example: Item not found
    
    FilterAttribute:
      type: object
      required:
        - id
        - attributeId
        - type
        - workspaceId
      properties:
        id:
          type: string
          format: uuid
        attributeId:
          type: string
          format: uuid
        type:
          type: string
          enum: ['ATTRIBUTE']
        workspaceId:
          type: string
          format: uuid
    
    FilterFixedOptions:
      allOf:
        - $ref: '#/components/schemas/FilterAttribute'
        - type: object
          required:
            - searchField
            - name
            - options
          properties:
            type:
              type: string
              enum: ['FIXED_OPTION']
            searchField:
              type: string
            name:
              type: string
            options:
              type: array
              items:
                type: string
    
    FilterAnyOptions:
     allOf:
        - $ref: '#/components/schemas/FilterAttribute'
        - type: object
          required:
            - type
            - searchField
            - name
            - dataType
          properties:
            type:
              type: string
              enum: ['ANY_OPTION']
            searchField:
              type: string
            name:
              type: string
            dataType:
              type: string

    HealthStatus: 
      type: object
      required: 
        - status
      properties:
        status:
          type: string
          enum:
            - OK
            - FAILED
    
    HealthCheckResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/HealthStatus'
    
    
    
    MemberShort:
      type: object
      required:
        - email
        - role
        - isAdmin
        - requireUploadApproval
      properties:
        email:
          type: string
          format: email
        isAdmin:
          type: boolean
        groups:
          type: array
          items: 
            $ref: '#/components/schemas/MemberGroup'
        requireUploadApproval:
          type: boolean
    
    Member:
      allOf:
        - $ref: '#/components/schemas/MemberShort'
        - type: object
          properties:
            id:
              type: string
              format: uuid
            status:
              type: string
              enum:
                - PENDING
                - ACTIVE
          
    MemberResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data: 
              $ref: '#/components/schemas/Member'
              
    MemberPageResponse:
      allOf:
        - $ref: '#/components/schemas/PaginatedResponse'
        - type: object
          required:
            - total
            - data
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Member'
      
    MemberGroup:
      type: object
      required: 
        - id
        - name
      properties:
        id: 
          type: string
          format: uuid
        name:
          type: string
        role:
          $ref: '#/components/schemas/MemberGroupRole'
        membersCount:
          type: integer
          format: int32
    
    MemberGroupPageResponse:
      allOf:
        - $ref: '#/components/schemas/PaginatedResponse'
        - type: object
          required:
            - total
            - data
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/MemberGroup'    
    
    MemberGroupRole:
      type: string
      enum:
        - BASIC
        - CONTRIBUTOR
    
    PaginatedRequest:
      type: object
      required: 
        - page
        - pageSize
      properties:
        page:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        criteria:
          $ref: '#/components/schemas/CriteriaGroup'
    

    PaginatedResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          required:
            - total
            - data
          properties:
            total:
              type: number
              format: int32
            data:
              type: array
              items:
                type: object
                
    PermissionAction: 
      type: object
      required:
        - resourceType
        - action
      properties:
        resourceType: 
          type: string
        action:
          type: string
        resourceId:
          type: string 
          
    ItemWithPermissions:
      type: object
      properties:
        targetItem: 
          type: object
        permissionActions:
          type: array
          items:
            $ref: '#/components/schemas/PermissionAction'
      
    ResponseStatus:
      type: object
      required: 
        - status
      properties:
        status:
          type: string
          enum: 
            - OK
            - ERROR
        messages:
          type: array
          items:
            $ref: '#/components/schemas/ErrorMessage'
    
    SystemAttribute:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
        name:
          type: string
        
    
    SystemAttributeResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/SystemAttribute'
        
    
    WorkspaceAttributesResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/ItemWithPermissions'
                  - type: object
                    properties:
                      targetItem:
                        $ref: '#/components/schemas/Attribute'
                      
    WorkspaceFiltersResponse:
      type: array
      items:
        oneOf:
          - $ref: '#/components/schemas/FilterAttribute'
          - $ref: '#/components/schemas/FilterFixedOptions'
          - $ref: '#/components/schemas/FilterAnyOptions'
          
    WorkspaceStatus:
      type: object
      required: 
        - workspace
      properties:
        workspace:
          type: string
        workspaceFree:
          type: boolean
          
    WorkspaceStatusRequest:
      type: object
      required: 
        - workspace
      properties:
        workspace:
          type: string
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]{0,61}[a-zA-Z0-9]$
           
    WorkspaceStatusResponse:
      allOf:
        - $ref: '#/components/schemas/CommonResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/WorkspaceStatus'
    
    WorkspacePermission:
      type: object
      required:
        - resourceType;
        - action
      properties:
        resourceType: 
          type: string
        action:
          type: string
        resourceId:
          type: string
    
    WorkspaceInfo:
      type: object
      required: 
        - id
        - name
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        dateUtcCreated:
          type: integer
          format: int64
        availablePermissions:
          type: array
          items:
            $ref: '#/components/schemas/WorkspacePermission'
          
    
    WorkspaceUserInfo:
      type: object
      required: 
        - id
      properties:
        id: 
          type: string
        email:
          type: string
          format: email
        firstName:
          type: string
        lastName:
          type: string
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/WorkspacePermission'
    
    WorkspaceInfoResponse:
      allOf:
       - $ref: '#/components/schemas/CommonResponse'
       - type: object
         properties:
           data:
            $ref: '#/components/schemas/WorkspaceInfo'    
    
    WorkspaceUserInfoResponse:
      allOf:
       - $ref: '#/components/schemas/CommonResponse'
       - type: object
         properties:
           data:
            $ref: '#/components/schemas/WorkspaceUserInfo'
